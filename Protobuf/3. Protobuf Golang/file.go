package main

import (
	"fmt"
	"log"
	"os"

	"google.golang.org/protobuf/proto"
)

/*
proto.Message -> Interface that all the protobuf messages needs to implement

Can pass any message that was generated by protocol compiler
*/

func writeToFile(fileName string, pb proto.Message) {
	// proto.Marshal: proto message to byte array
	out, err := proto.Marshal(pb)
	if err != nil {
		log.Fatalln("Can't serialize to bytes")
		return
	}

	// os.WriteFile: file name, content byte array, permission
	if err = os.WriteFile(fileName, out, 0644); err != nil {
		log.Fatalln("Can't write to file", err)
		return
	}

	fmt.Println("Data has been written!")
}

func readFromFile(fileName string, pb proto.Message) {
	in, err := os.ReadFile(fileName)
	if err != nil {
		log.Fatalln("Can't read file", err)
		return
	}

	// pb, which is proto.Message will be populated by read from file function
	if err = proto.Unmarshal(in, pb); err != nil {
		log.Fatalln("Could not unmarshal", err)
		return
	}

	fmt.Println(pb)
}
